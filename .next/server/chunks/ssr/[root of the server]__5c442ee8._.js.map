{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Coding/Cursor/Game/app/games/typing/page.tsx"],"sourcesContent":["\"use client\"; // 標記為客戶端組件\n\nimport { useState, useEffect, useRef } from \"react\";\n\n// 定義單字列表類型\ntype WordList = {\n  name: string;\n  words: string[];\n};\n\n// 定義打字遊戲的單字列表\nconst wordLists: WordList[] = [\n  {\n    name: \"📝 Basic Words\",\n    words:\n      `the, to, i, and, of, he, was, you, her, not, it, in, she, his, that, is, my, with, me, had, on, as, for, but, at, him, have, do, be, what, would, out, said, up, they, we, this, from, did, are, so, could, were, all, if, back, like, one, there, no, into, will, just, when, about, then, them, know, been, am, your, over, down, an, or, time, now, eyes, by, more, get, how, can, who, their, before, around, way, even, going, head, see, us, here, right, off, only, want, through, looked, hand, go, think, some, again, too, away, still, something, than, face, other, never, after, asked, thought, man, good, well, two, where, let, look, made, much, why, because, knew, got, little, door, our, any, room, come, make, take, long, first, say, its, felt, wanted, took, turned, need, hands, tell, really, sure, against, voice, should, has, left, which, very, people, told, came, another, while, last, life, anything, few, body, night, cannot, nothing, behind, being, enough, went, feel, side, does, thing, day, might, saw, until, things, though, those, yes, maybe, put, own, find, ever, every, looking, once, hair, moment, both, love, always, mind, next, place, inside, hard, help, front, without, found, house, mouth, old, same, keep, most, everything, himself, someone, toward, home, open, woman, trying, heard, pulled, arms, better, each, between, new, give, seemed, smile, work`.split(\n        \", \"\n      ),\n  },\n  {\n    name: \"🔍 HTML Tags\",\n    words:\n      `html, head, body, div, span, p, a, img, h1, h2, h3, h4, h5, h6, ul, ol, li, table, tr, td, th, form, input, button, label, select, option, textarea, meta, link, script, style, title, br, hr, strong, em, b, i, u, s, code, pre, blockquote, cite, q, abbr, acronym, address, article, aside, footer, header, nav, section, main, figure, figcaption, canvas, svg, path, circle, rect, line, polyline, polygon, audio, video, source, track, iframe, object, embed, param, map, area, details, summary, dialog, menu, menuitem, output, progress, meter, time, mark, ruby, rt, rp, bdi, bdo, wbr, data, picture, source, track, col, colgroup, caption, thead, tbody, tfoot, fieldset, legend, datalist, optgroup, keygen, output, progress, meter, time, mark, ruby, rt, rp, bdi, bdo, wbr, data, picture, source, track, col, colgroup, caption, thead, tbody, tfoot, fieldset, legend, datalist, optgroup, keygen`.split(\n        \", \"\n      ),\n  },\n];\n\n// 隨機打亂單詞列表並返回指定數量的單詞\nfunction shuffleWords(words: string[], count = 67) {\n  const shuffled = [...words].sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, count).join(\" \");\n}\n\n// 定義主題類型\ntype Theme = {\n  name: string;\n  background: string;\n  containerBg: string;\n  text: string;\n  primary: string;\n  secondary: string;\n  accent: string;\n  error: string;\n  success: string;\n  buttonBg: string;\n  buttonText: string;\n  buttonHover: string;\n  inputBg: string;\n  inputBorder: string;\n  inputFocus: string;\n  primaryColor: string;\n  secondaryColor: string;\n  accentColor: string;\n};\n\n// 定義可用的主題\nconst themes: Record<string, Theme> = {\n  light: {\n    name: \"Light\",\n    background: \"bg-gray-100\",\n    containerBg: \"bg-white\",\n    text: \"text-gray-700\",\n    primary: \"text-blue-600\",\n    secondary: \"text-gray-500\",\n    accent: \"bg-blue-500\",\n    error: \"text-red-500\",\n    success: \"text-green-500\",\n    buttonBg: \"bg-gray-200\",\n    buttonText: \"text-gray-700\",\n    buttonHover: \"hover:bg-gray-300\",\n    inputBg: \"bg-white\",\n    inputBorder: \"border-gray-300\",\n    inputFocus: \"focus:ring-blue-400\",\n    primaryColor: \"#2563eb\",\n    secondaryColor: \"#6b7280\",\n    accentColor: \"#3b82f6\",\n  },\n  dark: {\n    name: \"Dark\",\n    background: \"bg-gray-800\",\n    containerBg: \"bg-gray-900\",\n    text: \"text-gray-200\",\n    primary: \"text-blue-400\",\n    secondary: \"text-gray-400\",\n    accent: \"bg-blue-600\",\n    error: \"text-red-400\",\n    success: \"text-green-400\",\n    buttonBg: \"bg-gray-700\",\n    buttonText: \"text-gray-200\",\n    buttonHover: \"hover:bg-gray-600\",\n    inputBg: \"bg-gray-800\",\n    inputBorder: \"border-gray-600\",\n    inputFocus: \"focus:ring-blue-500\",\n    primaryColor: \"#60a5fa\",\n    secondaryColor: \"#9ca3af\",\n    accentColor: \"#2563eb\",\n  },\n  morandi: {\n    name: \"Morandi\",\n    background: \"bg-[#E8E4D9]\",\n    containerBg: \"bg-[#F5F2E9]\",\n    text: \"text-[#8B7E74]\",\n    primary: \"text-[#A67C52]\",\n    secondary: \"text-[#B4A7A0]\",\n    accent: \"bg-[#A67C52]\",\n    error: \"text-[#C17C74]\",\n    success: \"text-[#8B9D77]\",\n    buttonBg: \"bg-[#D8C3A5]\",\n    buttonText: \"text-[#8B7E74]\",\n    buttonHover: \"hover:bg-[#C4B19A]\",\n    inputBg: \"bg-[#F5F2E9]\",\n    inputBorder: \"border-[#D8C3A5]\",\n    inputFocus: \"focus:ring-[#A67C52]\",\n    primaryColor: \"#A67C52\",\n    secondaryColor: \"#B4A7A0\",\n    accentColor: \"#A67C52\",\n  },\n  sage: {\n    name: \"Sage\",\n    background: \"bg-[#E6E9E0]\",\n    containerBg: \"bg-[#F0F3EA]\",\n    text: \"text-[#7A8B7A]\",\n    primary: \"text-[#5F7A5F]\",\n    secondary: \"text-[#A0B0A0]\",\n    accent: \"bg-[#5F7A5F]\",\n    error: \"text-[#C17C74]\",\n    success: \"text-[#5F7A5F]\",\n    buttonBg: \"bg-[#C0D0C0]\",\n    buttonText: \"text-[#5F7A5F]\",\n    buttonHover: \"hover:bg-[#B0C0B0]\",\n    inputBg: \"bg-[#F0F3EA]\",\n    inputBorder: \"border-[#C0D0C0]\",\n    inputFocus: \"focus:ring-[#5F7A5F]\",\n    primaryColor: \"#5F7A5F\",\n    secondaryColor: \"#A0B0A0\",\n    accentColor: \"#5F7A5F\",\n  },\n  dusty: {\n    name: \"Dusty\",\n    background: \"bg-[#E8DED2]\",\n    containerBg: \"bg-[#F5EDE1]\",\n    text: \"text-[#8B7E74]\",\n    primary: \"text-[#B4A7A0]\",\n    secondary: \"text-[#C4B19A]\",\n    accent: \"bg-[#B4A7A0]\",\n    error: \"text-[#C17C74]\",\n    success: \"text-[#8B9D77]\",\n    buttonBg: \"bg-[#D8C3A5]\",\n    buttonText: \"text-[#8B7E74]\",\n    buttonHover: \"hover:bg-[#C4B19A]\",\n    inputBg: \"bg-[#F5EDE1]\",\n    inputBorder: \"border-[#D8C3A5]\",\n    inputFocus: \"focus:ring-[#B4A7A0]\",\n    primaryColor: \"#B4A7A0\",\n    secondaryColor: \"#C4B19A\",\n    accentColor: \"#B4A7A0\",\n  },\n  lavender: {\n    name: \"Lavender\",\n    background: \"bg-[#E6E0E9]\",\n    containerBg: \"bg-[#F0EAF3]\",\n    text: \"text-[#8B7E8B]\",\n    primary: \"text-[#A67CA6]\",\n    secondary: \"text-[#B4A7B4]\",\n    accent: \"bg-[#A67CA6]\",\n    error: \"text-[#C17C74]\",\n    success: \"text-[#8B9D77]\",\n    buttonBg: \"bg-[#D8C3D8]\",\n    buttonText: \"text-[#8B7E8B]\",\n    buttonHover: \"hover:bg-[#C4B1C4]\",\n    inputBg: \"bg-[#F0EAF3]\",\n    inputBorder: \"border-[#D8C3D8]\",\n    inputFocus: \"focus:ring-[#A67CA6]\",\n    primaryColor: \"#A67CA6\",\n    secondaryColor: \"#B4A7B4\",\n    accentColor: \"#A67CA6\",\n  },\n};\n\nexport default function Home() {\n  // DOM引用\n  const inputRef = useRef<HTMLInputElement>(null); // 輸入框引用\n\n  // 狀態管理\n  const [words, setWords] = useState<string[]>([]); // 當前遊戲中的單詞列表\n  const [currentIndex, setCurrentIndex] = useState(0); // 當前輸入的單詞索引\n  const [userInput, setUserInput] = useState(\"\"); // 用戶輸入的文字\n  const [timeLeft, setTimeLeft] = useState(0); // 剩餘時間\n  const [wpm, setWpm] = useState(0); // 每分鐘打字速度\n  const [timerRunning, setTimerRunning] = useState(false); // 計時器運行狀態\n  const [startTime, setStartTime] = useState<number | null>(null); // 遊戲開始時間\n  const [correctChars, setCorrectChars] = useState(0); // 正確輸入的字符數\n  const [gameStarted, setGameStarted] = useState(false); // 遊戲是否開始\n  const [gameEnded, setGameEnded] = useState(false); // 遊戲是否結束\n  const [selectedDuration, setSelectedDuration] = useState(15); // 選擇的遊戲時長\n  const [currentWordCorrect, setCurrentWordCorrect] = useState(true); // 當前單詞是否正確\n  const [currentTheme, setCurrentTheme] = useState(\"morandi\"); // 當前主題，默認為莫蘭迪\n  const [showThemeSelector, setShowThemeSelector] = useState(false); // 是否顯示主題選擇器\n  const [currentWordList, setCurrentWordList] = useState(0); // 當前選擇的單字列表索引\n  const [showWordListSelector, setShowWordListSelector] = useState(false); // 是否顯示單字列表選擇器\n\n  // 計算WPM(每分鐘字數)\n  const calculateWPM = () => {\n    if (!startTime) return;\n\n    const timeElapsed = (Date.now() - startTime) / 1000 / 60;\n    const adjustedWpm = correctChars / 5 / timeElapsed;\n\n    setWpm(Math.round(adjustedWpm));\n  };\n\n  // 開始新遊戲\n  const startGame = (duration: number) => {\n    setSelectedDuration(duration);\n    setWords(shuffleWords(wordLists[currentWordList].words).split(\" \"));\n    setCurrentIndex(0);\n    setUserInput(\"\");\n    setTimeLeft(duration);\n    setWpm(0);\n    setCorrectChars(0);\n    setStartTime(null);\n    setGameStarted(false);\n    setGameEnded(false);\n    setTimerRunning(false);\n    setCurrentWordCorrect(true);\n    // 確保在重新開始後將焦點回到輸入框\n    setTimeout(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 100);\n  };\n\n  // 重新開始遊戲\n  const restartGame = () => {\n    startGame(selectedDuration);\n  };\n\n  // 切換主題\n  const toggleTheme = (themeName: string) => {\n    setCurrentTheme(themeName);\n    setShowThemeSelector(false);\n  };\n\n  // 切換單字列表\n  const toggleWordList = (index: number) => {\n    setCurrentWordList(index);\n    setShowWordListSelector(false);\n    // 如果遊戲已經開始，重新開始遊戲以使用新的單字列表\n    if (gameStarted) {\n      setWords(shuffleWords(wordLists[index].words).split(\" \"));\n      setCurrentIndex(0);\n      setUserInput(\"\");\n      setTimeLeft(selectedDuration);\n      setWpm(0);\n      setCorrectChars(0);\n      setStartTime(null);\n      setGameStarted(false);\n      setGameEnded(false);\n      setTimerRunning(false);\n      setCurrentWordCorrect(true);\n      // 確保在重新開始後將焦點回到輸入框\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    } else {\n      // 否則只更新單字列表\n      setWords(shuffleWords(wordLists[index].words).split(\" \"));\n    }\n  };\n\n  // 處理用戶輸入\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setUserInput(value);\n\n    // 首次輸入時啟動遊戲\n    if (!gameStarted && value.length > 0) {\n      setGameStarted(true);\n      setStartTime(Date.now());\n      setTimerRunning(true);\n    }\n\n    // 如果遊戲已結束，不再處理輸入\n    if (gameEnded) return;\n\n    // 檢查當前輸入是否正確\n    const currentWord = words[currentIndex];\n    const isCorrect = value === currentWord.substring(0, value.length);\n    setCurrentWordCorrect(isCorrect);\n\n    // 處理單詞完成\n    if (value.endsWith(\" \")) {\n      // 檢查當前單詞是否完全正確\n      const isWordCorrect = value.trim() === currentWord;\n\n      if (isWordCorrect) {\n        setCorrectChars((prev) => prev + currentWord.length);\n        setCurrentIndex((prev) => prev + 1);\n        setUserInput(\"\");\n        setCurrentWordCorrect(true);\n\n        // 如果完成所有單詞，重新開始\n        if (currentIndex >= words.length - 1) {\n          setWords(shuffleWords(wordLists[currentWordList].words).split(\" \"));\n          setCurrentIndex(0);\n        }\n      } else {\n        // 如果單詞不正確，不清空輸入，讓用戶繼續輸入直到正確\n        setCorrectChars((prev) => prev + currentWord.length);\n      }\n    }\n  };\n\n  // 處理按鍵事件\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      restartGame();\n    }\n  };\n\n  // 渲染單詞列表\n  const renderWords = () => {\n    return words.map((word, index) => {\n      let className = \"inline-block mr-2 text-lg\";\n\n      if (index < currentIndex) {\n        className += ` ${themes[currentTheme].secondary}`;\n      } else if (index === currentIndex) {\n        className += ` ${themes[currentTheme].primary} font-bold`;\n      }\n\n      return (\n        <span key={index} className={className}>\n          {word}\n        </span>\n      );\n    });\n  };\n\n  // 初始化遊戲\n  useEffect(() => {\n    // 初始化時設置為15秒\n    setWords(shuffleWords(wordLists[currentWordList].words).split(\" \"));\n    setTimeLeft(15);\n\n    // 從本地存儲加載主題\n    const savedTheme = localStorage.getItem(\"typing-theme\");\n    if (savedTheme && themes[savedTheme]) {\n      setCurrentTheme(savedTheme);\n    }\n\n    // 從本地存儲加載單字列表\n    const savedWordList = localStorage.getItem(\"typing-wordlist\");\n    if (savedWordList) {\n      const index = parseInt(savedWordList);\n      if (!isNaN(index) && index >= 0 && index < wordLists.length) {\n        setCurrentWordList(index);\n        setWords(shuffleWords(wordLists[index].words).split(\" \"));\n      }\n    }\n  }, []);\n\n  // 計時器邏輯\n  useEffect(() => {\n    if (timerRunning && timeLeft > 0) {\n      const interval = setInterval(() => {\n        setTimeLeft((t) => t - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n    if (timeLeft === 0 && timerRunning) {\n      setTimerRunning(false);\n      setGameEnded(true);\n      calculateWPM();\n    }\n  }, [timeLeft, timerRunning]);\n\n  // 全局鍵盤事件處理\n  useEffect(() => {\n    const handleGlobalKeyDown = (e: KeyboardEvent) => {\n      if (e.key === \"Tab\" && gameEnded) {\n        e.preventDefault();\n        restartGame();\n        // 確保在重新開始後將焦點回到輸入框\n        setTimeout(() => {\n          if (inputRef.current) {\n            inputRef.current.focus();\n          }\n        }, 100);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleGlobalKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n    };\n  }, [gameEnded]);\n\n  // 保存主題到本地存儲\n  useEffect(() => {\n    localStorage.setItem(\"typing-theme\", currentTheme);\n  }, [currentTheme]);\n\n  // 保存單字列表到本地存儲\n  useEffect(() => {\n    localStorage.setItem(\"typing-wordlist\", currentWordList.toString());\n  }, [currentWordList]);\n\n  // 添加點擊空白處關閉選單的功能\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement;\n      if (!target.closest('.theme-selector') && !target.closest('.wordlist-selector')) {\n        setShowThemeSelector(false);\n        setShowWordListSelector(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // 渲染 UI\n  return (\n    <div\n      className={`min-h-screen ${themes[currentTheme].background} flex flex-col items-center justify-center p-4 transition-colors duration-300`}\n      tabIndex={0} // 使整個容器可以接收鍵盤事件\n    >\n      <div className=\"flex flex-col items-center w-full max-w-3xl mb-4\">\n        <h1\n          className={`font-bold ${themes[currentTheme].text}`}\n          style={{\n            fontSize: \"2.6rem\",\n            fontFamily: \"monospace\",\n            position: \"absolute\",\n            top: \"100px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        >\n          ⌨️Typing Game🖱️\n        </h1>\n\n        <div className=\"flex justify-between w-full\">\n          {/* 時間選擇按鈕 */}\n          <div className=\"space-x-2\">\n            {[15, 30, 60].map((sec) => (\n              <button\n                key={sec}\n                onClick={() => startGame(sec)}\n                className={`px-3 py-2 rounded cursor-pointer ${\n                  selectedDuration === sec\n                    ? `${themes[currentTheme].accent} text-white`\n                    : `${themes[currentTheme].buttonBg} ${themes[currentTheme].buttonText} ${themes[currentTheme].buttonHover}`\n                }`}\n              >\n                {sec} sec\n              </button>\n            ))}\n          </div>\n\n          <div className=\"flex space-x-2\">\n            {/* 單字列表選擇器 */}\n            <div className=\"relative wordlist-selector\">\n              <button\n                onClick={() => setShowWordListSelector(!showWordListSelector)}\n                className={`px-4 py-2 rounded-md ${themes[currentTheme].buttonBg} ${themes[currentTheme].buttonText} flex items-center cursor-pointer`}\n              >\n                {wordLists[currentWordList].name}\n              </button>\n\n              {showWordListSelector && (\n                <div\n                  className={`absolute right-0 mt-2 w-48 ${themes[currentTheme].containerBg} rounded-md shadow-lg z-10 border ${themes[currentTheme].inputBorder}`}\n                >\n                  {wordLists.map((list, index) => (\n                    <button\n                      key={index}\n                      onClick={() => toggleWordList(index)}\n                      className={`w-full text-left px-4 py-2 ${\n                        themes[currentTheme].buttonHover\n                      } ${currentWordList === index ? \"font-bold\" : \"\"} ${\n                        themes[currentTheme].text\n                      }`}\n                    >\n                      {list.name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* 主題選擇器 */}\n            <div className=\"relative theme-selector\">\n              <button\n                onClick={() => setShowThemeSelector(!showThemeSelector)}\n                className={`px-4 py-2 rounded-md ${themes[currentTheme].accent} text-white flex items-center cursor-pointer`}\n              >\n                <span className=\"mr-1\">🎨</span> {themes[currentTheme].name}\n              </button>\n\n              {showThemeSelector && (\n                <div\n                  className={`absolute right-0 mt-2 w-48 ${themes[currentTheme].containerBg} rounded-md shadow-lg z-10 border ${themes[currentTheme].inputBorder}`}\n                >\n                  {Object.keys(themes).map((themeName) => (\n                    <button\n                      key={themeName}\n                      onClick={() => toggleTheme(themeName)}\n                      className={`w-full text-left px-4 py-2 ${\n                        themes[themeName].buttonHover\n                      } ${currentTheme === themeName ? \"font-bold\" : \"\"} ${\n                        themes[themeName].text\n                      } flex items-center justify-between`}\n                    >\n                      <span>{themes[themeName].name}</span>\n                      <div className=\"flex space-x-1\">\n                        <div\n                          className=\"w-3 h-3 rounded-full\"\n                          style={{ backgroundColor: themes[themeName].primaryColor }}\n                        />\n                        <div\n                          className=\"w-3 h-3 rounded-full\"\n                          style={{ backgroundColor: themes[themeName].secondaryColor }}\n                        />\n                        <div\n                          className=\"w-3 h-3 rounded-full\"\n                          style={{ backgroundColor: themes[themeName].accentColor }}\n                        />\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 主遊戲區域 */}\n      <div\n        className={`shadow-md rounded p-6 w-full max-w-3xl mb-4 ${themes[currentTheme].containerBg}`}\n      >\n        <div\n          className={`mb-4 leading-relaxed h-[200px] overflow-y-auto ${themes[currentTheme].text}`}\n          style={{\n            height: \"150px\",\n            overflowY: \"auto\"\n          }}\n        >\n          {renderWords()}\n        </div>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          className={`w-full h-11 border rounded p-2 focus:outline-none focus:ring-2 ${\n            currentWordCorrect\n              ? `${themes[currentTheme].inputBorder} ${themes[currentTheme].inputFocus} ${themes[currentTheme].text} ${themes[currentTheme].inputBg}`\n              : `border-red-500 focus:ring-red-400 ${themes[currentTheme].text} ${themes[currentTheme].inputBg}`\n          }`}\n          placeholder={\n            gameEnded ? \"press ' Tab ' to restart\" : \"Type to start . . .\"\n          }\n          value={userInput}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          disabled={gameEnded}\n        />\n      </div>\n\n      {/* 遊戲狀態顯示 */}\n      <div className={`text-lg mt-2 ${themes[currentTheme].text}`}>\n        ⏱ Time：<span className=\"font-semibold\">{timeLeft}</span> s &nbsp;\n        | &nbsp; ✍️ Speed：<span className=\"font-semibold\">{wpm}</span> WPM\n      </div>\n      <div\n        className={`text-lg ${themes[currentTheme].secondary} mt-2`}\n        style={{\n          position: \"absolute\",\n          bottom: \"30px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          opacity: 0.7,\n        }}\n      >\n        press ' Tab ' to restart\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Coding/Cursor/Game/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Coding/Cursor/Game/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 708, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Coding/Cursor/Game/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}